.global main 
.func main 
main: 
LDR R1, =backup_lr @Address of the var 
STR LR, [R1]  @Store LinkRegister in var 
@------BEGIN--------

LDR R0, =pattern @int pattern (%d)
LDR R1, =terms_to_calculate @Send variable address
BL scanf  @Function to receive input from the keyboard

LDR R0, =pattern @int pattern (%d)
LDR R1, =old @Send variable address
BL scanf  @Function to receive input from the keyboard

LDR R0, =pattern @int pattern (%d)
LDR R1, =gold @Send variable address
BL scanf  @Function to receive input from the keyboard

LDR R0, =pattern @int pattern (%d)
LDR R1, =acc @Send variable address
BL scanf  @Function to receive input from the keyboard

MOV R2, #0 @Move value to the R2
LDR R1, =counted @Getting var address
STR R2, [R1]  @Store exp result in var

LDR R1, =valor_total @Getting var address
STR R2, [R1]  @Store exp result in var

LDR R1, =new_number @Getting var address
STR R2, [R1]  @Store exp result in var

LDR R1,=new_number @Send address to the R1
LDR R2, [R1] @Move value from R2 to var location
LDR R1, =n2 @Getting var address
STR R2, [R1]  @Store exp result in var

LDR R1, =counted @Getting var address
STR R2, [R1]  @Store exp result in var

B _fim_se0 @Jumps unconditionally
None: @add symbol after expr
_fim_se0: 
LDR R1,=taxas @Send address to the R1
LDR R2, [R1] @Move value from R2 to var location
MOV R3, R2  @Send end result to R3
MOV R2, #123 @Move value to the R2
CMP R3, R2  @Compare R3 and R2, changes flags status
BLT _se1  @Jumps if R3 < R1
B _senao2 @Jumps unconditionally (R3 == R1)
_se1: @add symbol after expr
_senao2: 
@------END--------
LDR R1, =backup_lr @Address of the var 
LDR LR, [LR] 
BX LR Return from the main function

.data @ Data section
.balign 8 @Bytes allocated to each var
pattern: .asciz "%d" @Int format
pattern_print: .asciz "%d\n" 
backup_lr: .word 0
 

.global printf 
.global scanf 
old: .word 0 
gold: .word 0 
acc: .word 0 
terms_to_calculate: .word 0 
n1: .word 0 
n2: .word 0 
counted: .word 0 
new_number: .word 0 
valor_total: .word 0 
valor_ethereum: .word 0 
valor_barato: .word 0 
taxas: .word 0 
