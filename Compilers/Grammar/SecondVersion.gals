#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Full
Input = Stream
Parser = LL
#RegularDefinitions
L : [A-Za-z]
D : [0-9]
WS : [\ \t\n\r]






#Tokens
:{WS}*
id: {L} ( {L} | {D})*

display = id:"display" 
input = id:"input"
digit = id: "digit"
beginFun = id: "BeginFun"
endFun = id: "EndFun"

if = id: "if"
then = id: "then"
else = id: "else"
end = id: "end"
elif = id: "elif"
loopwhile = id: "loopwhile"
do = id: "do"
endloop = id: "endloop"
expression = id: "expression"
compare = id: "compare"


"."
"<-"
","
"+"
"-"
"/"
"*"
"("
")"

//Relational Operators
"="
"<>"
"<"
"<="
">="
">"
"or"
"and"

#NonTerminals
<PROGRAMA>
<LISTA_COMANDOS>
<COMANDO>
<ANT_VAR>


<INPUT> 
<DISPLAY>

<EXPR>
<ELSE>
<ELIF>

<COMPR> 
<OPER>

#Grammar
<PROGRAMA> ::= beginFun <LISTA_COMANDOS> endFun;
<LISTA_COMANDOS> ::= <COMANDO>"." <LISTA_COMANDOS> | î ; 
<COMANDO> ::= id "<-" <EXPR>;
<COMANDO> ::= <ANT_VAR> id ;
<ANT_VAR> ::= input | digit;
<COMANDO> ::= display <EXPR>;

//If-Statment
<COMANDO> ::= if <COMPR> then <LISTA_COMANDOS> <ELIF> <ELSE> end;
<ELSE> ::= else <LISTA_COMANDOS> | î ;
<ELIF> ::= elif <COMPR> <LISTA_COMANDOS> | î;

//While-statment
<COMANDO> ::= loopwhile <COMPR> do <LISTA_COMANDOS> endloop;

//Expressions
<EXPR> ::= expression;

<COMPR> ::= compare;
<OPER> ::= "=" | "<>" | "<" | "<=" |">=" |">" | "or" |"and";


